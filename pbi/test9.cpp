#include <iostream> bool isPrime(unsigned short n) { if(n <= 1) return false; if(n <= 3) return true; if(n % 2 == 0 || n % 3 == 0) return false; for(unsigned short i = 5; i * i <= n; i = i + 6) if(n % i == 0 || n % (i + 2) == 0) return false; return true; } struct { short unsigned int start, end; } data[1002]; int main() { unsigned short n, m, tmp; long longest = 0, current = 0; FILE *in, *out; in = fopen("memory004.in", "r"); out = fopen("memory004.out", "w"); fscanf(in, "%hu %hu", &n, &m); for(unsigned short i = 0; i < n; i++) { for(unsigned short j = 0; j < m; j++) { fscanf(in, "%hu", &tmp); if(isPrime(tmp)) { if(i == data[j].start) { data[j].start += 1; } data[j].end += 1; } else { if(data[j].end > longest) { longest = data[j].end; } data[j].end = 0; } } } for(unsigned short j = 0; j <= m; j++) { current += data[j].start; if(data[j].end != n) { if(current > longest) { longest = current; } current = data[j].end; } if(current > longest) { longest = current; } } fprintf(out, "%ld", longest); }